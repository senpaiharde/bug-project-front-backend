name: Build & Publish Docker Images

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build & push backend image
        uses: docker/build-push-action@v3
        with:
          context: ./miss-bug-proj-backend
          file: ./miss-bug-proj-backend/Dockerfile
         
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/missbug-backend:latest

      - name: Build & push frontend image
        uses: docker/build-push-action@v3
        with:
          context: ./miss-bug-starter-react-vite
          file: ./miss-bug-starter-react-vite/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/missbug-frontend:latest

  docker-test:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build backend image for test
        run: |
         docker build --target runtime ./miss-bug-proj-backend -t backend:ci

      - name: Run health‑check container
        run: |

         docker run -d --name ci-test -p 3030:3030 backend:ci
         # Wait up to 15s for the server to be ready
         for i in {1..5}; do
           curl --fail http://localhost:3030/health && break
           echo "Waiting for backend... ($i)"
           sleep 3
         done
         curl --fail http://localhost:3030/health
      - name: Tear down
        run: |
          docker stop ci-test
          docker rm ci-test


  test-backend:
    needs: docker-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install backend dependencies
        working-directory: ./miss-bug-proj-backend
        run: npm ci

      - name: Run backend integration tests
        working-directory: ./miss-bug-proj-backend
        env:
          NODE_ENV: test          # ← ensure requireAuth skips auth
        run: npm test             # runs "jest --runInBand"
